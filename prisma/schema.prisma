generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Type {
  student
  teacher
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  firstName String
  lastName  String
  password  String
  type      Type
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  AuthCode  AuthCode[]
  Token     Token[]
  Profile   Profile?
}

model Profile {
  userId    Int      @unique
  about     String?  @db.VarChar(300)
  avatarURL String?  @db.VarChar(2048)
  email     String?
  telegram  String?  @unique
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
}

model InviteCode {
  code         String   @unique
  account_type Type
  expiresAt    DateTime
}

model AuthCode {
  authorizationCode String   @unique
  expiresAt         DateTime
  redirectUri       String
  client            Client   @relation(fields: [clientId], references: [clientId])
  user              User     @relation(fields: [userId], references: [id])
  clientId          String
  userId            Int
}

model Client {
  clientId     String     @id
  clientSecret String
  redirectUris String[]
  grants       String[]
  AuthCode     AuthCode[]
  Token        Token[]
  userId       Int
}

model Token {
  accessToken           String   @unique
  accessTokenExpiresAt  DateTime
  refreshToken          String   @unique
  refreshTokenExpiresAt DateTime
  client                Client   @relation(fields: [clientId], references: [clientId])
  user                  User     @relation(fields: [userId], references: [id])
  clientId              String
  userId                Int
}

model session {
  sid    String   @unique
  sess   Json
  expire DateTime
}
